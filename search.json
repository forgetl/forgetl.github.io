[{"title":"Pico 2 锁板问题原因分析与解决方案","url":"/2025/08/05/About-me/","content":"【Pico 2 锁板问题原因分析与解决方案】在使用幸狐的 Pico 2（RP2350A）进行开发时，有部分用户可能遇到「锁板」现象 —— 即板子重启后无法再通过 Thonny 或其他 IDE 与其通信，导致无法上传新的程序。本文将介绍该问题的常见原因、复现方式及解决方案。\n\n\n一、问题复现与根本原因1. 与线程相关的程序会导致通信失败如果你使用 micropython 的 _thread 模块来开启新线程，比如官方示例中的multicore：\nimport time, _thread, machinedef task(n, delay):    led = machine.Pin(&quot;LED&quot;, machine.Pin.OUT)    for i in range(n):        led.high()        time.sleep(delay)        led.low()        time.sleep(delay)    print(&#x27;done&#x27;)_thread.start_new_thread(task, (10, 0.5))\n\n这类程序在运行期间可能会阻塞串口通信，从而导致 Thonny 与开发板通信失败。\n2. 放在 main.py 中问题会永久化在 MicroPython 中，如果你将上述线程代码写入 main.py，那么每次板子重启都会自动执行 main.py，从而立刻触发死循环或线程异常， 即使重启也无法中断执行逻辑 ，Thonny 将彻底无法重新连接到板子，导致「锁板」。\n\n二、解决方案：刷入 flash_nuke.uf2 文件清除 Flash步骤如下：\n按住 BOOTSEL 键的同时插入 USB 连接线\n这样板子将进入“USB Mass Storage”模式（类似U盘），不会自动执行 flash 中的 main.py，从而避免再次进入死循环。\n\n将新版的 flash_nuke.uf2 文件拖入该磁盘\n你需要确保使用的是适用于 RP2350 的新版 flash_nuke.uf2 文件，旧版的 nuke 文件对新架构（如 RP2350）无效，拖入磁盘中也不会自动执行。官方链接：flash_nuke.uf2\n\n等待刷写完成后板子会自动重启，Flash 被清空\n此时你可以使用 Thonny 正常连接板子，重新拖入MicroPython固件，然后重新上传你的 MicroPython 程序。\n\n\n\n三、预防建议\n调试阶段避免直接写入 main.py ，建议先在 Thonny 中交互式运行；\n线程代码务必确保有超时机制 ，避免死循环；\n提前备份重要脚本代码 ，以免 nuke 操作导致文件丢失。\n\n\n四、总结Pico 2 的锁板现象主要由启动后自动执行的线程代码导致，与其芯片双核架构和 Micropython 的线程机制有关。使用 flash_nuke.uf2 是目前最有效的解锁手段，开发者应在使用多线程等功能时更加谨慎，避免程序失控而导致的通信中断。\n","categories":["单片机","Pico2"],"tags":["Pico2","单片机","新手踩坑"]},{"title":"Hello World","url":"/2025/08/05/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]